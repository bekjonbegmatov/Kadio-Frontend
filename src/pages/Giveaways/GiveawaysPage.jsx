import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { FiGift, FiPlus, FiEye, FiEyeOff, FiUsers, FiClock, FiTrendingUp } from 'react-icons/fi';
import { getGiveaways } from '../../api/giveaways';
import animatedGift from '../../assets/gif/animaed_gift.gif';
import rIcon from '../../assets/img/navbar/R.png';
import './GiveawaysPage.css';

const GiveawaysPage = () => {
  const [giveaways, setGiveaways] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [showRules, setShowRules] = useState(false);
  const [showAnimation, setShowAnimation] = useState(true);

  useEffect(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é 2 —Å–µ–∫—É–Ω–¥—ã
    const animationTimer = setTimeout(() => {
      setShowAnimation(false);
      fetchGiveaways();
    }, 2000);

    return () => clearTimeout(animationTimer);
  }, []);

  const fetchGiveaways = async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await getGiveaways();
      setGiveaways(data);
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω–∫—É—Ä—Å–æ–≤');
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getTimeLeft = (endDate) => {
    const now = new Date();
    const end = new Date(endDate);
    const diff = end - now;
    
    if (diff <= 0) {
      return { expired: true, text: '–ó–∞–≤–µ—Ä—à–µ–Ω' };
    }
    
    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
    
    if (days > 0) {
      return { expired: false, text: `${days}–¥ ${hours}—á ${minutes}–º` };
    } else if (hours > 0) {
      return { expired: false, text: `${hours}—á ${minutes}–º` };
    } else {
      return { expired: false, text: `${minutes}–º` };
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–¥–∞—Ä–∫–∞
  if (showAnimation) {
    return (
      <div className="giveaways-loading">
        <div className="gift-animation-container">
          <img 
            src={animatedGift} 
            alt="–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–∫—É—Ä—Å–æ–≤" 
            className="gift-animation"
          />
          <h2 className="loading-text">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω–∫—É—Ä—Å—ã...</h2>
        </div>
      </div>
    );
  }

  return (
    <div className="giveaways-page">
      <div className="giveaways-header">
        <h1 className="page-title">
          <FiGift /> –ö–æ–Ω–∫—É—Ä—Å—ã –∏ –†–æ–∑—ã–≥—Ä—ã—à–∏
        </h1>
        <p className="page-description">
          –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏–ª–∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ! 
          –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –∞–ª–º–∞–∑—ã –∏ –¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–∏–∑–∞–º–∏ —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º.
        </p>
        <div className="header-actions">
          <Link to="/giveaways/create" className="create-giveaway-btn">
            <FiGift /> –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω–∫—É—Ä—Å
          </Link>
          <button 
            className="rules-toggle-btn"
            onClick={() => setShowRules(!showRules)}
          >
            {showRules ? <><FiEyeOff /> –°–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–∞</> : <><FiEye /> –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞</>}
          </button>
        </div>
      </div>

      {showRules && (
        <div className="rules-section">
          <h3><FiGift /> –ü—Ä–∞–≤–∏–ª–∞ –∫–æ–Ω–∫—É—Ä—Å–æ–≤</h3>
          <div className="rules-grid">
            <div className="rule-item">
              <span className="rule-icon"><FiTrendingUp /></span>
              <div>
                <h4>–ß–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞</h4>
                <p>–í—Å–µ –∫–æ–Ω–∫—É—Ä—Å—ã –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —á–µ—Å—Ç–Ω–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ</p>
              </div>
            </div>
            <div className="rule-item">
              <span className="rule-icon"><FiClock /></span>
              <div>
                <h4>–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤</h4>
                <p>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è</p>
              </div>
            </div>
            <div className="rule-item">
              <span className="rule-icon"><FiGift /></span>
              <div>
                <h4>–ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–∏–∑–æ–≤</h4>
                <p>–í—Å–µ –ø—Ä–∏–∑—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤—ã–¥–∞—é—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º</p>
              </div>
            </div>
            <div className="rule-item">
              <span className="rule-icon"><FiUsers /></span>
              <div>
                <h4>–†–∞–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h4>
                <p>–£ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ä–∞–≤–Ω—ã–µ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {loading && (
        <div className="loading-spinner">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–∫—É—Ä—Å–æ–≤...</p>
        </div>
      )}

      {error && (
        <div className="error-message">
          <p>{error}</p>
          <button onClick={fetchGiveaways} className="retry-btn">
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      )}

      {!loading && !error && (
        <div className="giveaways-grid">
          {giveaways.length === 0 ? (
            <div className="no-giveaways">
              <div className="empty-state">
                <span className="empty-icon"><FiGift /></span>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä—Å–æ–≤</h3>
                <p>–°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –∫–æ–Ω–∫—É—Ä—Å!</p>
                <Link to="/giveaways/create" className="create-first-btn">
                  –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –∫–æ–Ω–∫—É—Ä—Å
                </Link>
              </div>
            </div>
          ) : (
            giveaways.map((giveaway) => {
              const timeLeft = getTimeLeft(giveaway.end_date);
              return (
                <div key={giveaway.id} className="giveaway-card">
                  <div className="card-header">
                    <h3 className="giveaway-title">{giveaway.title}</h3>
                    <span className={`status-badge ${giveaway.is_active ? 'active' : 'inactive'}`}>
                      {giveaway.is_active ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω'}
                    </span>
                  </div>
                  
                  <p className="giveaway-description">{giveaway.description}</p>
                  
                  <div className="giveaway-stats">
                    <div className="stat">
                      <span className="stat-label">–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥:</span>
                      <span className="stat-value prize-fond"><img src={rIcon} alt="R" className="r-icon" /> {giveaway.prize_fond}</span>
                    </div>
                    <div className="stat">
                      <span className="stat-label">–í–∑–Ω–æ—Å:</span>
                      <span className="stat-value"><img src={rIcon} alt="R" className="r-icon" /> {giveaway.giveaway_cost}</span>
                    </div>
                    <div className="stat">
                      <span className="stat-label">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</span>
                      <span className="stat-value">{giveaway.participants_count}</span>
                    </div>
                  </div>
                  
                  <div className="giveaway-timing">
                    <div className="time-info">
                      <span className="time-label">–û–∫–æ–Ω—á–∞–Ω–∏–µ:</span>
                      <span className="time-value">{formatDate(giveaway.end_date)}</span>
                    </div>
                    <div className="time-left">
                      <span className={`countdown ${timeLeft.expired ? 'expired' : ''}`}>
                        {timeLeft.text}
                      </span>
                    </div>
                  </div>
                  
                  <div className="card-footer">
                    <span className="organizer">–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: {giveaway.organizator_email}</span>
                    <Link 
                      to={`/giveaways/${giveaway.id}`} 
                      className="view-details-btn"
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </Link>
                  </div>
                </div>
              );
            })
          )}
        </div>
      )}
    </div>
  );
};

export default GiveawaysPage;