import React, { useState, useEffect } from 'react'
import ChatRoomList from '../../components/Chat/ChatRoomList'
import ChatWindow from '../../components/Chat/ChatWindow'
import './ChatsPage.css'
import { getUserProfile } from '../../api/auth'
const ChatsPage = () => {
  const [currentUser, setCurrentUser] = useState(null)
  const [selectedRoom, setSelectedRoom] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    // –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞/store
    const loadCurrentUser = async () => {
      try {
        setLoading(true)
        
        const userDataFromAPI = await getUserProfile()
        if (userDataFromAPI.success) {
          setCurrentUser(userDataFromAPI.data)
        }        
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err)
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      } finally {
        setLoading(false)
      }
    }

    loadCurrentUser()
  }, [])

  const handleRetry = () => {
    setError(null)
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ loadCurrentUser
    window.location.reload()
  }

  if (loading) {
    return (
      <div className="chats-page">
        <div className="chats-loading">
          <div className="loading-spinner"></div>
          <h2>–ó–∞–≥—Ä—É–∑–∫–∞ —á–∞—Ç–∞...</h2>
          <p>–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥–ª—è –≤–∞—à–µ–≥–æ –æ–±—â–µ–Ω–∏—è</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="chats-page">
        <div className="chats-error">
          <div className="error-icon">üòû</div>
          <h2>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</h2>
          <p>{error}</p>
          <div className="error-actions">
            <button onClick={handleRetry} className="retry-btn">
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
            <button 
              onClick={() => window.location.href = '/'} 
              className="home-btn"
            >
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </button>
          </div>
        </div>
      </div>
    )
  }

  if (!currentUser) {
    return (
      <div className="chats-page">
        <div className="chats-error">
          <div className="error-icon">üîê</div>
          <h2>–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
          <p>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
          <div className="error-actions">
            <button 
              onClick={() => window.location.href = '/login'} 
              className="login-btn"
            >
              –í–æ–π—Ç–∏
            </button>
            <button 
              onClick={() => window.location.href = '/register'} 
              className="register-btn"
            >
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </button>
          </div>
        </div>
      </div>
    )
  }

  const handleRoomSelect = (room) => {
    setSelectedRoom(room)
  }

  return (
    <div className="chats-page">
      <div className="chats-layout">
        <div className="chats-sidebar">
          <ChatRoomList 
            onSelectRoom={handleRoomSelect}
            selectedRoomId={selectedRoom?.id}
          />
        </div>
        <div className="chats-main">
          {selectedRoom ? (
            <ChatWindow 
              room={selectedRoom}
              currentUser={currentUser}
            />
          ) : (
            <div className="no-chat-selected">
              <div className="no-chat-icon">üí¨</div>
              <h3>–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç</h3>
              <p>–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–µ–≤–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç —Å –¥—Ä—É–∑—å—è–º–∏</p>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default ChatsPage