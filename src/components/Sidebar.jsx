import React, { useState, useEffect } from 'react';
import { 
  FiUser, FiUsers, FiFileText, FiShoppingBag, FiCheckSquare, 
  FiAward, FiTarget, FiStar, FiEdit3, FiImage, FiBook, 
  FiBriefcase, FiShield, FiBarChart, FiMap 
} from 'react-icons/fi';
import { getUserProfile } from '../api/auth';
import './Sidebar.css';

const Sidebar = ({ width = 280, isCollapsed = false, onToggle }) => {
  const [activeItem, setActiveItem] = useState('news');
  const [userProfile, setUserProfile] = useState(null);
  const [loading, setLoading] = useState(true);

  const menuItems = [
    { id: 'news', name: '–ù–æ–≤–æ—Å—Ç–∏', icon: FiFileText, badge: null },
    { id: 'colleagues', name: '–ö–æ–ª–ª–µ–≥–∏', icon: FiUsers, badge: null },
    { id: 'hero', name: '–ì–µ—Ä–æ–π', icon: FiShield, badge: null },
    { id: 'achievements', name: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', icon: FiAward, badge: null },
    { id: 'shop', name: '–ú–∞–≥–∞–∑–∏–Ω', icon: FiShoppingBag, badge: null },
    { id: 'tasks', name: '–ó–∞–¥–∞–Ω–∏—è', icon: FiCheckSquare, badge: null },
    { id: 'contests', name: '–ö–æ–Ω–∫—É—Ä—Å—ã', icon: FiTarget, badge: null },
    { id: 'quests', name: '–ö–≤–µ—Å—Ç—ã', icon: FiMap, badge: null },
    { id: 'ratings', name: '–†–µ–π—Ç–∏–Ω–≥–∏', icon: FiBarChart, badge: null }
  ];

  const contentItems = [
    { id: 'applications', name: '–ó–∞—è–≤–∫–∏', icon: FiEdit3, badge: null },
    { id: 'gallery', name: '–ì–∞–ª–µ—Ä–µ—è', icon: FiImage, badge: null },
    { id: 'materials', name: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', icon: FiBook, badge: null },
    { id: 'documents', name: '–î–æ–∫—É–º–µ–Ω—Ç—ã', icon: FiFileText, badge: null },
    { id: 'company', name: '–ö–æ–º–ø–∞–Ω–∏—è', icon: FiBriefcase, badge: null }
  ];

  useEffect(() => {
    const fetchUserProfile = async () => {
      try {
        const profile = await getUserProfile();
        setUserProfile(profile);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
      } finally {
        setLoading(false);
      }
    };

    fetchUserProfile();
  }, []);

  const handleItemClick = (itemId) => {
    setActiveItem(itemId);
    console.log('Clicked item:', itemId);
  };

  return (
    <div 
      className={`sidebar ${isCollapsed ? 'collapsed' : ''}`}
      style={{ width: isCollapsed ? '60px' : `${width}px` }}
    >
      {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div className="user-profile">
        <div className="avatar">
          {loading ? (
            <div className="avatar-placeholder">üë§</div>
          ) : (
            <img 
              src={userProfile?.avatar || ''} 
              alt="Avatar" 
              onError={(e) => {
                e.target.src = '';
              }}
            />
          )}
        </div>
        {!isCollapsed && (
          <div className="user-info">
            <h4>{loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (userProfile?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}</h4>
          </div>
        )}
      </div>
      
      {/* –ò–≥—Ä–æ–≤–∞—è —Å–µ–∫—Ü–∏—è */}
      {!isCollapsed && (
        <div className="game-section">
          <span className="section-label">–ò–≥—Ä–∞</span>
        </div>
      )}
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é */}
      <div className="sidebar-content">
        {menuItems.map(item => (
          <div 
            key={item.id}
            className={`menu-item ${activeItem === item.id ? 'active' : ''}`}
            onClick={() => handleItemClick(item.id)}
          >
            <span className="menu-icon"><item.icon /></span>
            {!isCollapsed && (
              <>
                <span className="menu-name">{item.name}</span>
                {item.badge && <span className="menu-badge">{item.badge}</span>}
              </>
            )}
          </div>
        ))}
        
        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Ü–∏—è */}
        {!isCollapsed && (
          <div className="section-divider">
            <span className="section-label">–ö–æ–Ω—Ç–µ–Ω—Ç</span>
          </div>
        )}
        
        {contentItems.map(item => (
          <div 
            key={item.id}
            className={`menu-item ${activeItem === item.id ? 'active' : ''}`}
            onClick={() => handleItemClick(item.id)}
          >
            <span className="menu-icon"><item.icon /></span>
            {!isCollapsed && (
              <>
                <span className="menu-name">{item.name}</span>
                {item.badge && <span className="menu-badge">{item.badge}</span>}
              </>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};

export default Sidebar;